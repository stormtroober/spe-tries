name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to push commits and create PRs
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to create pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.13"

      - name: Install dependencies
        run: HUSKY=0 npm clean-install

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          # Run semantic-release and capture the output
          npx semantic-release
          
          # Extract the latest tag created by semantic-release
          VERSION_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV

      - name: Create Release Branch
        if: success() && env.VERSION_TAG != ''
        run: |
          # Remove the 'v' prefix if present
          VERSION=${VERSION_TAG#v}
          
          # Create a new branch named with the version
          git checkout -b "release/v$VERSION"
          
          # Push the new branch to the repository using BOT_TOKEN
          git push origin "release/v$VERSION"
